 import itertools as it
import string  # only for getting alphabet list quickly in Python2! remove this part if using python3 or pytohn2+with_future_feature (i.e., from sympy import * )    
def nextWord(word):   		# function to find the best word according mario's game rules  which is nothing but all possible permutations of given string in lexicographic order starting after current state and returning first valid one i,e smallest letter comes at start  		             # this algo will give correct answer for python3 as well
    letters = list(word)		# convert to a list so we can easily modify it  (ie: use indices rather than slices. much faster! )    
    words=[]                 			    	        
    if len(letters)>1 :                		             # only need two or more distinct characters for this algo, ie no single char inputs allowed as per mario's game rules     	                    					        	          				    		                                  		    						  	    		   							 	   		  	  	        		       	       								      	     	      
        words = list(it.permutations(letters))     # generate all permutations (ie: every possible ordering of the letters)   			        										                                                            		                                               									           													         														     															          																											                                                             				            						  					                            												 								words=sorted([ ''.join(wrd ) for wrd in words if sorted(''.join(wrd))>sorted(word)])[0] # select the smallest one that is greater than current state (ie: word)    
    return str() if len(words)==0 else words[-1] 	# empty list will result None , so check for it and print blank string instead of erroring out. Also last item in a sorted List/Tuple or even an array would be the smallest possible after current state as per lexicographic order        
word = 'abcd'     # test with this to ensure algo works correctly!  (ie: all permutations generated should come before it, ie alphabetical)   	            						  					                            												 								# word=input().strip()      for getting input from user in python3           			                                                        									                                                                              
print(nextWord(word))
# Generator time: 12.5966 seconds