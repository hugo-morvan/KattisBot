 ```python
def find_triple_correlation(sequence):
    p = len(sequence)
    
    for i in range(2, int((p - 10 + 3)/4)): # n should be at least two and no more than the sequence size minus ten divided by four (inclusive). The plus one is to ensure that there's enough data left after triple correlation.   For example if p=5 then we can only have a single i which will make it out of range but when 10/4 =2 with reminder so this condition helps us not go beyond the limit
        for j in range(i, int((p - (3*i) + 6)/8)): # m should be at least equal to n and no more than p minus three times i divided by eight. The plus two is because we need enough space left after triple correlation   For example if sequence size =5 then max value for j will make it out of range but when (3*i+6)/8=2 with reminder so this condition helps us not go beyond the limit
            a, b1, c  = int(sequence[0]),int(sequence[i + i - 1]) , sequence[(p //4) % p] # we start from first element and look for triple correlation after 'n' elements (as specified by problem). Then among those results that are found within the given range of m,we take one which is also present in position determined as per our requirement.
            b2 = sequence[i + i - 1+j] if ((p-(3*i))/8) > j else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == 4 else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random). If so, take its next value as per our requirement.
            b = int(b1) + 2 if type(a)==int and a == sequence[(p //4 -3 ) % p] else 'random' # we do this to check whether that element comes within the range of m or not (if no then it is random
# Generator time: 49.5715 seconds