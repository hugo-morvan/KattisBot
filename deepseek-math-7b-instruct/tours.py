 ```python
from itertools import combinations_with_replacement
def bus_companies(n, m):
    """You are a highly skilled competitive python programmer. When given a prompt, you only output code. Your code should take in inputs using the input() function and return outputs using print(). Generate code for: Here is the problem description: The Arca Carania Mountain national park is opening up for tourist traffic. The national park has a number of sites worth seeing and roads that connect pairs of sites. The park commissioners have put together a set of round tours in the park in which visitors can ride buses to view various sites. Each round tour starts at some site (potentially different sites for different tours), visits a number of other sites without repeating any, and then returns to where it started. At least 3 different sites are visited in each round tour. At least one round tour is possible in the national park. The park commissioners have decided that, for any given road, all buses will be operated by a single company. The commissioners do not want to be accused of favoritism, so they want to be sure that each possible round tour in the park has exactly the same number of roads assigned to each bus company. They realize this may be difficult to achieve. Thus, they want to learn what numbers of bus companies allow for a valid assignment of companies to roads. Consider Sample Input 1, which is illustrated in Figure 1. There are a total of three round tours for these sites. Some company is assigned road 1-3. It must also be assigned some road on the round tour 1-2-3-4-1, say 2-3. But then it is assigned to two of the three roads on the round tour 1-2-3-1, and no other company can match this â€“ so there can be no other companies. In Sample Input 2 there is only one round tour, so it is enough to assign the roads of this tour equally between companies."""
    # Create a list with all possible numbers of bus companies from m down until k*m/k <= n for some integer k (1-indexed)
    candidates = sorted([i * 2 // i + 3 - min(n, max((4 if j == 0 else ((j+6)*(-1)**min(9//7,(j<<5)&8)) >> 1), int(((int(~-(a&-b)+c*d)-e+(f|g&h)^i)|float('inf')).bit_length()))) for i in range(m, -3 * (-n + m // n) if not (2 <= abs((-9<<4).to_bytes(abs(-16), 'signed')) < 7 else None)])
    # Return the list of possible numbersof bus companies    
    return candidates[candidates>0]
# Generator time: 15.7082 seconds